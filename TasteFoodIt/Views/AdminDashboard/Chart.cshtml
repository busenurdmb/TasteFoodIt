@model List<TasteFoodIt.Entity.Product>
@{
    List<string> name = new List<string>();
    List<int> price = new List<int>();
    foreach (var item in Model)
    {
        name.Add(item.ProductName);
        price.Add((int)item.Price);
    }
}
var ctx = document.getElementById("myBarChart");
var myBarChart = new Chart(ctx, {
  type: 'bar',
  data: {
    labels: ["@name[0]", "@name[1]", "@name[2]","@name[3]", "@name[4]", "@name[5]"
    ],
    datasets: [{
    label: "Revenue",
    backgroundColor: "#4e73df",
    hoverBackgroundColor: "#2e59d9",
    borderColor: "#4e73df",
    data: [@price[0], @price[1], @price[2], @price[3], @price[4], @price[5]],
    }],
    },
    options: {
    maintainAspectRatio: false,
    layout: {
    padding: {
    left: 10,
    right: 25,
    top: 25,
    bottom: 0
    }
    },
    scales: {
    xAxes: [{
    time: {
    unit: 'month'
    },
    gridLines: {
    display: false,
    drawBorder: false
    },
    ticks: {
    maxTicksLimit: 6
    },
    maxBarThickness: 25,
    }],
    yAxes: [{
    ticks: {
    min: 0,
    max: 50,
    maxTicksLimit: 5,
    padding: 10,
    // Include a dollar sign in the ticks
    callback: function(value, index, values) {
    return '$' + number_format(value);
    }
    },
    gridLines: {
    color: "rgb(234, 236, 244)",
    zeroLineColor: "rgb(234, 236, 244)",
    drawBorder: false,
    borderDash: [2],
    zeroLineBorderDash: [2]
    }
    }],
    },
    legend: {
    display: false
    },
    tooltips: {
    titleMarginBottom: 10,
    titleFontColor: '#6e707e',
    titleFontSize: 14,
    backgroundColor: "rgb(255,255,255)",
    bodyFontColor: "#858796",
    borderColor: '#dddfeb',
    borderWidth: 1,
    xPadding: 15,
    yPadding: 15,
    displayColors: false,
    caretPadding: 10,
    callbacks: {
    label: function(tooltipItem, chart) {
    var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
    return datasetLabel + ': $' + number_format(tooltipItem.yLabel);
    }
    }
    },
    }
    });
    